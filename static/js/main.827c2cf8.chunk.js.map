{"version":3,"sources":["components/card/card.component.js","components/card-list/card-list.component.js","components/search-box/serach-box-component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","_super","call","state","searchField","bind","assertThisInitialized","_this2","fetch","then","response","json","users","setState","e","target","value","_this$state","filteredMonsters","filter","toLowerCase","includes","serach_box_component_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"mTAIaA,SAAO,SAAAC,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OACCE,IAAI,UACJC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BAEAR,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQE,KAApB,KACAT,EAAAC,EAAAC,cAAA,aAAMH,EAAMQ,QAAQG,UCLfC,SAAW,SAAAZ,GAAK,OAC7BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACNJ,EAAMa,SAASC,IAAI,SAAAN,GAAO,OAC1BP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,SCL5BS,SAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACrBnB,EAAAC,EAAAC,cAAA,SACAC,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAYF,MCuCDG,2DAvCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAI,EAAAC,KAAAF,OAEIG,MAAQ,CACXjB,SAAU,GACVkB,YAAa,IAGfP,EAAKJ,aAAeI,EAAKJ,aAAaY,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IARRA,uDAWb,WAAmB,IAAAU,EAAAP,KACjBQ,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKM,SAAS,CAAE3B,SAAU0B,kCAG3C,SAAaE,GACXd,KAAKa,SAAS,CAAET,YAAaU,EAAEC,OAAOC,8BAGxC,WACE,IAAAC,EAAkCjB,KAAKG,MAA/BjB,EAAR+B,EAAQ/B,SAAUkB,EAAlBa,EAAkBb,YACZc,EAAmBhC,EAASiC,OAAO,SAAAtC,GAAO,OAC9CA,EAAQE,KAAKqC,cAAcC,SAASjB,EAAYgB,iBAElD,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC8C,EAAD,CACC9B,YAAY,kBACZC,aAAcO,KAAKP,eAEtBnB,EAAAC,EAAAC,cAAC+C,EAAD,CAAUrC,SAAUgC,YAlCRM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAd,EAAA,GAAAL,KAAAmB,EAAAvB,KAAA,UAAqBI,KAAK,SAAAlB,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDdQ,IAASC,OACP7D,EAAAC,EAAAC,cAACF,EAAAC,EAAM6D,WAAP,KACE9D,EAAAC,EAAAC,cAAC6D,EAAD,OAEFC,SAASC,eAAe,SAM1Bd","file":"static/js/main.827c2cf8.chunk.js","sourcesContent":["import React  from \"react\";\n\nimport './card.styles.css';\n\nexport const Card = props => (\n    <div className='card-container'> \n    <img\n     alt='monster'\n     src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\n     />\n        <h2> {props.monster.name} </h2>\n        <p> { props.monster.email }</p> \n    </div>\n);   ","import React  from \"react\";\n\nimport { Card }  from '../card/card.component';\n\nimport './card-list.styles.css';\n\nexport const CardList = props => (\n<div className='card-list'>\n        {props.monsters.map(monster =>  (\n         <Card key={monster.id} monster={monster}/>))}\n    </div>\n); ","import React from \"react\";\n\nimport './search-box-styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange}) => (\n    <input\n    className='search'\n    type='search'\n    placeholder={placeholder}\n    onChange = {handleChange}\n    />\n);","import React, { Component } from 'react';\n\nimport { CardList }  from './components/card-list/card-list.component';\n\nimport { SearchBox } from './components/search-box/serach-box-component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n   this.state = {\n     monsters: [],\n     searchField: ''\n   };\n\n   this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users') \n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users})); \n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state; \n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return(\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n         placeholder='search monsters' \n         handleChange={this.handleChange}\n        />\n      <CardList monsters={filteredMonsters} />\n    </div>      \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}